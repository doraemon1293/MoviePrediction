import ga
from urllib import urlopen
import ib
import csv
import string
import json
import types#
import numpy as np
import random
import math


#read weight
f=open('weight.txt','rb')
line= f.readline()
w=[string.atof(s) for s in line.split(', ')]
f.close()
#build index
index=ib.indexbuilder(w,'csv_file.csv','index,csv')
ib.write_index(index,index_file="index.csv")
#Imdb_id = raw_input("Input your id plz: ")
imdb_id = 'tt0120645'
print 'imdb_id: '+imdb_id
# read movie's imformation
imdbapi = urlopen("http://imdbapi.org/?id=%s&type=json&plot=simple&episode=1&lang=en-US&aka=simple&release=simple&business=1&tech=0" % imdb_id)
try:
	imdbapi=json.load(imdbapi)
except Exception,e :
	print Exception,":",e
if imdbapi.has_key('code'):
	print 'Imdb_id doesn\'t exist'
else:

	field=['imdb_id','title','rating','directors','writers','actors','budget','gross']
	imdb_id=imdbapi['imdb_id']
	rating=imdbapi['rating']
	title=imdbapi['title'].encode("ascii","ignore")
	if (not imdbapi.has_key('directors')):
		directors='unknown'
	else:
		if (type(imdbapi['directors']) is types.ListType):
				for i in range (0,len(imdbapi['directors'])):
				   imdbapi['directors'][i]=imdbapi['directors'][i].encode("ascii","ignore")
				directors=imdbapi['directors']
		else: directors=imdbapi['directors'].encode("ascii","ignore")


	if (not imdbapi.has_key('writers')):
		writers='unknown'
	else:
		if (type(imdbapi['writers']) is types.ListType):
				for i in range (0,len(imdbapi['writers'])):
				   imdbapi['writers'][i]=imdbapi['writers'][i].encode("ascii","ignore")
				writers=imdbapi['writers']
		else: writers=imdbapi['writers'].encode("ascii","ignore")

	if (not imdbapi.has_key('actors')):
		actors='unknown'
	else:
		if (type(imdbapi['actors']) is types.ListType):
				for i in range (0,len(imdbapi['actors'])):
				   imdbapi['actors'][i]=imdbapi['actors'][i].encode("ascii","ignore")
				actors=imdbapi['actors']
		else: actors=imdbapi['actors'].encode("ascii","ignore")


	if imdbapi['business'].has_key('budget'):
		budget=imdbapi['business']['budget'][0]['money'].encode("ascii","ignore")
	else: budget='Unknown'
	gross='Unknown'
	count=''
	for country in imdbapi['business']['gross']:
		if country['money']>count:
				count=country['money']
		if country['country']=='USA':
				gross=country['money'].encode("ascii","ignore")
				break
	if gross =='unknown':
		gross=count
	imdb={'imdb_id':imdb_id,'rating':rating,'title':title,'directors':directors,
	  'writers':writers,'actors':actors,'budget':budget,'gross':gross}
	directors=[]
	for s in imdb['directors']:
		if not ('more credit' in s):
			if index.has_key(s):
				directors.append( string.atof( index[s][0]) )#if the person is known, give its value from index
			else:
				print 1
				directors.append(random.gauss(5.9,0.764323))# if the person is unknown, give it a random value generated by normal distribution
	writers=[]
	for s in imdb['writers']:
		if not ('more credit' in s):
			if index.has_key(s):
				writers.append( string.atof(index[s][0]) )
			else:
				print 1
				writers.append(random.gauss(5.9,0.764323))
	actors=[]
	for s in imdb['actors']:
		if not ('more credit' in s):
			if index.has_key(s) :
				actors.append(string.atof(index[s][0]))
			else:
				print 1
				actors.append(random.gauss(5.9,0.764323))
	director=np.mean(np.array(directors))
	writer=np.mean(np.array(writers))
	actor12=0
	actor34=0
	n12=0
	n34=0
	ao=0
	nao=0
	for i in range(len(actors)):
		if actors[i]!=0:
			if (i<2):
				actor12+=actors[i]
				n12+=1
			elif i<4:
				actor34+=actors[i]
				n34+=1
			else:
				ao+=actors[i]
				nao+=1
	if n12!=0:
		actor12=actor12/n12
	if n34!=0:
		actor34=actor34/n34
	if nao!=0:
		ao=ao/nao
	print 'estimated score'
	print ga.es([director,writer,actor12,actor34,ao],w)
#	gross=string.atof(imdb['gross'].replace('$','').replace(',',''))
#	budget=string.atof(imdb['budget'].replace('$','').replace(',',''))
#	real_score=((math.log10( gross/ budget )+4.839631525)/0.869663741375 + string.atof(imdb['rating']) )/2
#	print 'real  score'
#	print real_score
